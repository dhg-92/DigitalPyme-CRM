services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    platform: linux/amd64
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    platform: linux/amd64
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  offerdb:
    image: postgres
    platform: linux/amd64
    restart: always
    ports:
      - 54320:5432
    environment:
      POSTGRES_USER: offer
      POSTGRES_PASSWORD: offer

  userdb:
    image: postgres
    platform: linux/amd64
    restart: always
    ports:
      - 54321:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user

  notificationsdb:
    image: postgres
    platform: linux/amd64
    restart: always
    ports:
      - 54322:5432
    environment:
      POSTGRES_USER: notifications
      POSTGRES_PASSWORD: notifications

  offers-service:
    build:
      context: ./offers
      dockerfile: Dockerfile
    ports:
      - 18081:18081
    depends_on:
      - offerdb
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://offerdb:5432/postgres
      SPRING_DATASOURCE_USERNAME: offer
      SPRING_DATASOURCE_PASSWORD: offer

  users-service:
    build:
      context: ./users
      dockerfile: Dockerfile
    ports:
      - 18082:18082
    depends_on:
      - userdb
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://userdb:5432/postgres
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: user

  notifications-service:
    build:
      context: ./notifications
      dockerfile: Dockerfile
    ports:
      - 18083:18083
    depends_on:
      - notificationsdb
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notificationsdb:5432/postgres
      SPRING_DATASOURCE_USERNAME: notifications
      SPRING_DATASOURCE_PASSWORD: notifications

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      -  offers-service
      -  users-service
      -  notifications-service
    ports:
      - 80:5173

  gateway:
    image: nginx:latest
    depends_on:
      - offers-service
      - users-service
      -  notifications-service
    ports:
      - 8085:8085
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
